from sklearn.preprocessing import LabelEncoder
import pandas as pd

data = {
    'Origin': ['Japan', 'Japan', 'Japan', 'Japan', 'Japan', 'Japan'],
    'Manufacturer': ['Honda', 'Honda', 'Toyota', 'Toyota', 'Honda', 'Honda'],
    'Color': ['Blue', 'Red', 'Blue', 'Red', 'Red', 'White'],
    'Type': ['Economy', 'Sports', 'Economy', 'Economy', 'Economy', 'Economy'],
    'Decade': [1980, 1990, 1990, 1980, 1980, 1980],
    'CreditScore': ['Positive', 'Positive', 'Negative', 'Positive', 'Positive', 'Positive']
}
df = pd.DataFrame(data)

# Encode categorical variables
le = LabelEncoder()
for col in df.columns:
    df[col] = le.fit_transform(df[col])

# Train Naive Bayes
from sklearn.naive_bayes import GaussianNB
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

X = df.drop('CreditScore', axis=1)
y = df['CreditScore']
X_train, X_test, y_train, y_test = train_test_split(X, y)

model = GaussianNB().fit(X_train, y_train)
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
